{
  "$schema": "./node_modules/@biomejs/biome/configuration_schema.json",
  "formatter": {
    "enabled": false,
    "indentStyle": "space",
    "lineWidth": 120,
  },
  "linter": {
    "enabled": true,
    "domains": {
      "project": "all",
      "test": "all",
    },
    "rules": {
      "recommended": true,
      "correctness": {
        "noUnusedFunctionParameters": "off",
        "noUnusedVariables": {
          "level": "error",
          "options": {
            "ignoreRestSiblings": true,
          },
        },
      },
      "nursery": {
        "useConsistentTypeDefinitions": {
          "level": "error",
          "options": {
            "style": "interface",
          },
        },

        // Biome's docs say that this is enabled in the `project` domain but that doesn't seem to
        // be the case. https://biomejs.dev/linter/domains/#project-rules
        "noFloatingPromises": "error",

        // Temporarily disabling this because it has some serious issues with its entropy level
        // and picks up too many false positives. https://github.com/biomejs/biome/issues/4113
        "noSecrets": "off",
        "noShadow": "error",

        // Biome's docs say that this is enabled in the `project` domain but that doesn't seem to
        // be the case. https://biomejs.dev/linter/domains/#project-rules
        "noUnnecessaryConditions": "error",
      },
      "performance": {
        "noAwaitInLoops": "error",
        "noBarrelFile": "error",
      },
      "style": {
        "noParameterAssign": "error",
        "useConsistentArrayType": "error",

        // This rule is currently too aggressive on function definitions and we're disabling it
        // for the time being until it becomes more inline with ESLint's behavior and its
        // `ignoreConstructors` option.
        //
        // https://eslint.org/docs/latest/rules/object-shorthand
        // https://biomejs.dev/linter/rules/use-consistent-object-definitions/
        "useConsistentObjectDefinitions": "off",

        "useDefaultParameterLast": "error",
        "useDefaultSwitchClause": "error",
        "useThrowNewError": "error",
      },
      "suspicious": {
        "noConsole": "warn",
        "noTsIgnore": "error",
        "useErrorMessage": "warn",
        "useIterableCallbackReturn": "error",
      },
    },
  },
  "javascript": {
    "formatter": {
      "arrowParentheses": "asNeeded",
      "quoteStyle": "single",
    },
  },
  "assist": {
    "enabled": true,
    "actions": {
      "source": {
        "organizeImports": {
          "level": "on",
          "options": {
            // Import order: `type` -> Node builtins -> URL -> Package -> Local paths
            "groups": [
              { "type": true, "source": null },
              ":BLANK_LINE:", // We add blank lines between the groups to improve readability.
              { "type": null, "source": [":BUN:", ":NODE:"] },
              ":BLANK_LINE:",
              {
                "type": null,
                "source": [":URL", ":PACKAGE:", ":PACKAGE_WITH_PROTOCOL:"],
              },
              ":BLANK_LINE:",
              ":PATH:",
            ],
          },
        },
      },
    },
  },
}
